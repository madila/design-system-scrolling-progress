{"version":3,"names":["h","directivePrefix","p","ignoreAttr","islandAttr","fullPrefix","namespaces","currentNamespace","_namespaces","length","directiveParser","RegExp","nsPathRegExp","hydratedIslands","WeakSet","toVdom","root","treeWalker","document","createTreeWalker","walk","node","attributes","nodeType","localName","data","next","nextSibling","replaceWith","window","Text","nodeValue","remove","props","children","directives","ignore","island","i","n","name","slice","_nsPathRegExp$exec$sl","ns","value","exec","JSON","parse","e","_value$namespace","push","namespace","innerHTML","__directives","add","reduce","obj","prefix","suffix","content","childNodes","map","childNode","child","firstChild","vnode","nextChild","parentNode","pop","currentNode"],"sources":["@wordpress/interactivity/src/vdom.ts"],"sourcesContent":["/**\n * External dependencies\n */\nimport { h } from 'preact';\n/**\n * Internal dependencies\n */\nimport { directivePrefix as p } from './constants';\n\nconst ignoreAttr = `data-${ p }-ignore`;\nconst islandAttr = `data-${ p }-interactive`;\nconst fullPrefix = `data-${ p }-`;\nconst namespaces = [];\nconst currentNamespace = () => namespaces[ namespaces.length - 1 ] ?? null;\n\n// Regular expression for directive parsing.\nconst directiveParser = new RegExp(\n\t`^data-${ p }-` + // ${p} must be a prefix string, like 'wp'.\n\t\t// Match alphanumeric characters including hyphen-separated\n\t\t// segments. It excludes underscore intentionally to prevent confusion.\n\t\t// E.g., \"custom-directive\".\n\t\t'([a-z0-9]+(?:-[a-z0-9]+)*)' +\n\t\t// (Optional) Match '--' followed by any alphanumeric charachters. It\n\t\t// excludes underscore intentionally to prevent confusion, but it can\n\t\t// contain multiple hyphens. E.g., \"--custom-prefix--with-more-info\".\n\t\t'(?:--([a-z0-9_-]+))?$',\n\t'i' // Case insensitive.\n);\n\n// Regular expression for reference parsing. It can contain a namespace before\n// the reference, separated by `::`, like `some-namespace::state.somePath`.\n// Namespaces can contain any alphanumeric characters, hyphens, underscores or\n// forward slashes. References don't have any restrictions.\nconst nsPathRegExp = /^([\\w-_\\/]+)::(.+)$/;\n\nexport const hydratedIslands = new WeakSet();\n\n/**\n * Recursive function that transforms a DOM tree into vDOM.\n *\n * @param {Node} root The root element or node to start traversing on.\n * @return {import('preact').VNode[]} The resulting vDOM tree.\n */\nexport function toVdom( root ) {\n\tconst treeWalker = document.createTreeWalker(\n\t\troot,\n\t\t205 // ELEMENT + TEXT + COMMENT + CDATA_SECTION + PROCESSING_INSTRUCTION\n\t);\n\n\tfunction walk( node ) {\n\t\tconst { attributes, nodeType, localName } = node;\n\n\t\tif ( nodeType === 3 ) return [ node.data ];\n\t\tif ( nodeType === 4 ) {\n\t\t\tconst next = treeWalker.nextSibling();\n\t\t\tnode.replaceWith( new window.Text( node.nodeValue ) );\n\t\t\treturn [ node.nodeValue, next ];\n\t\t}\n\t\tif ( nodeType === 8 || nodeType === 7 ) {\n\t\t\tconst next = treeWalker.nextSibling();\n\t\t\tnode.remove();\n\t\t\treturn [ null, next ];\n\t\t}\n\n\t\tconst props: Record< string, any > = {};\n\t\tconst children = [];\n\t\tconst directives = [];\n\t\tlet ignore = false;\n\t\tlet island = false;\n\n\t\tfor ( let i = 0; i < attributes.length; i++ ) {\n\t\t\tconst n = attributes[ i ].name;\n\t\t\tif (\n\t\t\t\tn[ fullPrefix.length ] &&\n\t\t\t\tn.slice( 0, fullPrefix.length ) === fullPrefix\n\t\t\t) {\n\t\t\t\tif ( n === ignoreAttr ) {\n\t\t\t\t\tignore = true;\n\t\t\t\t} else {\n\t\t\t\t\tlet [ ns, value ] = nsPathRegExp\n\t\t\t\t\t\t.exec( attributes[ i ].value )\n\t\t\t\t\t\t?.slice( 1 ) ?? [ null, attributes[ i ].value ];\n\t\t\t\t\ttry {\n\t\t\t\t\t\tvalue = JSON.parse( value );\n\t\t\t\t\t} catch ( e ) {}\n\t\t\t\t\tif ( n === islandAttr ) {\n\t\t\t\t\t\tisland = true;\n\t\t\t\t\t\tnamespaces.push(\n\t\t\t\t\t\t\ttypeof value === 'string'\n\t\t\t\t\t\t\t\t? value\n\t\t\t\t\t\t\t\t: value?.namespace ?? null\n\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdirectives.push( [ n, ns, value ] );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if ( n === 'ref' ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tprops[ n ] = attributes[ i ].value;\n\t\t}\n\n\t\tif ( ignore && ! island )\n\t\t\treturn [\n\t\t\t\th( localName, {\n\t\t\t\t\t...props,\n\t\t\t\t\tinnerHTML: node.innerHTML,\n\t\t\t\t\t__directives: { ignore: true },\n\t\t\t\t} ),\n\t\t\t];\n\t\tif ( island ) hydratedIslands.add( node );\n\n\t\tif ( directives.length ) {\n\t\t\tprops.__directives = directives.reduce(\n\t\t\t\t( obj, [ name, ns, value ] ) => {\n\t\t\t\t\tconst [ , prefix, suffix = 'default' ] =\n\t\t\t\t\t\tdirectiveParser.exec( name );\n\t\t\t\t\tif ( ! obj[ prefix ] ) obj[ prefix ] = [];\n\t\t\t\t\tobj[ prefix ].push( {\n\t\t\t\t\t\tnamespace: ns ?? currentNamespace(),\n\t\t\t\t\t\tvalue,\n\t\t\t\t\t\tsuffix,\n\t\t\t\t\t} );\n\t\t\t\t\treturn obj;\n\t\t\t\t},\n\t\t\t\t{}\n\t\t\t);\n\t\t}\n\n\t\tif ( localName === 'template' ) {\n\t\t\tprops.content = [ ...node.content.childNodes ].map( ( childNode ) =>\n\t\t\t\ttoVdom( childNode )\n\t\t\t);\n\t\t} else {\n\t\t\tlet child = treeWalker.firstChild();\n\t\t\tif ( child ) {\n\t\t\t\twhile ( child ) {\n\t\t\t\t\tconst [ vnode, nextChild ] = walk( child );\n\t\t\t\t\tif ( vnode ) children.push( vnode );\n\t\t\t\t\tchild = nextChild || treeWalker.nextSibling();\n\t\t\t\t}\n\t\t\t\ttreeWalker.parentNode();\n\t\t\t}\n\t\t}\n\n\t\t// Restore previous namespace.\n\t\tif ( island ) namespaces.pop();\n\n\t\treturn [ h( localName, props, children ) ];\n\t}\n\n\treturn walk( treeWalker.currentNode );\n}\n"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,CAAC,QAAQ,QAAQ;AAC1B;AACA;AACA;AACA,SAASC,eAAe,IAAIC,CAAC,QAAQ,aAAa;AAElD,MAAMC,UAAU,GAAI,QAAQD,CAAG,SAAQ;AACvC,MAAME,UAAU,GAAI,QAAQF,CAAG,cAAa;AAC5C,MAAMG,UAAU,GAAI,QAAQH,CAAG,GAAE;AACjC,MAAMI,UAAU,GAAG,EAAE;AACrB,MAAMC,gBAAgB,GAAGA,CAAA;EAAA,IAAAC,WAAA;EAAA,QAAAA,WAAA,GAAMF,UAAU,CAAEA,UAAU,CAACG,MAAM,GAAG,CAAC,CAAE,cAAAD,WAAA,cAAAA,WAAA,GAAI,IAAI;AAAA;;AAE1E;AACA,MAAME,eAAe,GAAG,IAAIC,MAAM,CAChC,SAAST,CAAG,GAAE;AAAG;AACjB;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA,uBAAuB,EACxB,GAAG,CAAC;AACL,CAAC;;AAED;AACA;AACA;AACA;AACA,MAAMU,YAAY,GAAG,qBAAqB;AAE1C,OAAO,MAAMC,eAAe,GAAG,IAAIC,OAAO,CAAC,CAAC;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,MAAMA,CAAEC,IAAI,EAAG;EAC9B,MAAMC,UAAU,GAAGC,QAAQ,CAACC,gBAAgB,CAC3CH,IAAI,EACJ,GAAG,CAAC;EACL,CAAC;EAED,SAASI,IAAIA,CAAEC,IAAI,EAAG;IACrB,MAAM;MAAEC,UAAU;MAAEC,QAAQ;MAAEC;IAAU,CAAC,GAAGH,IAAI;IAEhD,IAAKE,QAAQ,KAAK,CAAC,EAAG,OAAO,CAAEF,IAAI,CAACI,IAAI,CAAE;IAC1C,IAAKF,QAAQ,KAAK,CAAC,EAAG;MACrB,MAAMG,IAAI,GAAGT,UAAU,CAACU,WAAW,CAAC,CAAC;MACrCN,IAAI,CAACO,WAAW,CAAE,IAAIC,MAAM,CAACC,IAAI,CAAET,IAAI,CAACU,SAAU,CAAE,CAAC;MACrD,OAAO,CAAEV,IAAI,CAACU,SAAS,EAAEL,IAAI,CAAE;IAChC;IACA,IAAKH,QAAQ,KAAK,CAAC,IAAIA,QAAQ,KAAK,CAAC,EAAG;MACvC,MAAMG,IAAI,GAAGT,UAAU,CAACU,WAAW,CAAC,CAAC;MACrCN,IAAI,CAACW,MAAM,CAAC,CAAC;MACb,OAAO,CAAE,IAAI,EAAEN,IAAI,CAAE;IACtB;IAEA,MAAMO,KAA4B,GAAG,CAAC,CAAC;IACvC,MAAMC,QAAQ,GAAG,EAAE;IACnB,MAAMC,UAAU,GAAG,EAAE;IACrB,IAAIC,MAAM,GAAG,KAAK;IAClB,IAAIC,MAAM,GAAG,KAAK;IAElB,KAAM,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGhB,UAAU,CAACb,MAAM,EAAE6B,CAAC,EAAE,EAAG;MAC7C,MAAMC,CAAC,GAAGjB,UAAU,CAAEgB,CAAC,CAAE,CAACE,IAAI;MAC9B,IACCD,CAAC,CAAElC,UAAU,CAACI,MAAM,CAAE,IACtB8B,CAAC,CAACE,KAAK,CAAE,CAAC,EAAEpC,UAAU,CAACI,MAAO,CAAC,KAAKJ,UAAU,EAC7C;QACD,IAAKkC,CAAC,KAAKpC,UAAU,EAAG;UACvBiC,MAAM,GAAG,IAAI;QACd,CAAC,MAAM;UAAA,IAAAM,qBAAA;UACN,IAAI,CAAEC,EAAE,EAAEC,KAAK,CAAE,IAAAF,qBAAA,GAAG9B,YAAY,CAC9BiC,IAAI,CAAEvB,UAAU,CAAEgB,CAAC,CAAE,CAACM,KAAM,CAAC,EAC5BH,KAAK,CAAE,CAAE,CAAC,cAAAC,qBAAA,cAAAA,qBAAA,GAAI,CAAE,IAAI,EAAEpB,UAAU,CAAEgB,CAAC,CAAE,CAACM,KAAK,CAAE;UAChD,IAAI;YACHA,KAAK,GAAGE,IAAI,CAACC,KAAK,CAAEH,KAAM,CAAC;UAC5B,CAAC,CAAC,OAAQI,CAAC,EAAG,CAAC;UACf,IAAKT,CAAC,KAAKnC,UAAU,EAAG;YAAA,IAAA6C,gBAAA;YACvBZ,MAAM,GAAG,IAAI;YACb/B,UAAU,CAAC4C,IAAI,CACd,OAAON,KAAK,KAAK,QAAQ,GACtBA,KAAK,IAAAK,gBAAA,GACLL,KAAK,EAAEO,SAAS,cAAAF,gBAAA,cAAAA,gBAAA,GAAI,IACxB,CAAC;UACF,CAAC,MAAM;YACNd,UAAU,CAACe,IAAI,CAAE,CAAEX,CAAC,EAAEI,EAAE,EAAEC,KAAK,CAAG,CAAC;UACpC;QACD;MACD,CAAC,MAAM,IAAKL,CAAC,KAAK,KAAK,EAAG;QACzB;MACD;MACAN,KAAK,CAAEM,CAAC,CAAE,GAAGjB,UAAU,CAAEgB,CAAC,CAAE,CAACM,KAAK;IACnC;IAEA,IAAKR,MAAM,IAAI,CAAEC,MAAM,EACtB,OAAO,CACNrC,CAAC,CAAEwB,SAAS,EAAE;MACb,GAAGS,KAAK;MACRmB,SAAS,EAAE/B,IAAI,CAAC+B,SAAS;MACzBC,YAAY,EAAE;QAAEjB,MAAM,EAAE;MAAK;IAC9B,CAAE,CAAC,CACH;IACF,IAAKC,MAAM,EAAGxB,eAAe,CAACyC,GAAG,CAAEjC,IAAK,CAAC;IAEzC,IAAKc,UAAU,CAAC1B,MAAM,EAAG;MACxBwB,KAAK,CAACoB,YAAY,GAAGlB,UAAU,CAACoB,MAAM,CACrC,CAAEC,GAAG,EAAE,CAAEhB,IAAI,EAAEG,EAAE,EAAEC,KAAK,CAAE,KAAM;QAC/B,MAAM,GAAIa,MAAM,EAAEC,MAAM,GAAG,SAAS,CAAE,GACrChD,eAAe,CAACmC,IAAI,CAAEL,IAAK,CAAC;QAC7B,IAAK,CAAEgB,GAAG,CAAEC,MAAM,CAAE,EAAGD,GAAG,CAAEC,MAAM,CAAE,GAAG,EAAE;QACzCD,GAAG,CAAEC,MAAM,CAAE,CAACP,IAAI,CAAE;UACnBC,SAAS,EAAER,EAAE,aAAFA,EAAE,cAAFA,EAAE,GAAIpC,gBAAgB,CAAC,CAAC;UACnCqC,KAAK;UACLc;QACD,CAAE,CAAC;QACH,OAAOF,GAAG;MACX,CAAC,EACD,CAAC,CACF,CAAC;IACF;IAEA,IAAKhC,SAAS,KAAK,UAAU,EAAG;MAC/BS,KAAK,CAAC0B,OAAO,GAAG,CAAE,GAAGtC,IAAI,CAACsC,OAAO,CAACC,UAAU,CAAE,CAACC,GAAG,CAAIC,SAAS,IAC9D/C,MAAM,CAAE+C,SAAU,CACnB,CAAC;IACF,CAAC,MAAM;MACN,IAAIC,KAAK,GAAG9C,UAAU,CAAC+C,UAAU,CAAC,CAAC;MACnC,IAAKD,KAAK,EAAG;QACZ,OAAQA,KAAK,EAAG;UACf,MAAM,CAAEE,KAAK,EAAEC,SAAS,CAAE,GAAG9C,IAAI,CAAE2C,KAAM,CAAC;UAC1C,IAAKE,KAAK,EAAG/B,QAAQ,CAACgB,IAAI,CAAEe,KAAM,CAAC;UACnCF,KAAK,GAAGG,SAAS,IAAIjD,UAAU,CAACU,WAAW,CAAC,CAAC;QAC9C;QACAV,UAAU,CAACkD,UAAU,CAAC,CAAC;MACxB;IACD;;IAEA;IACA,IAAK9B,MAAM,EAAG/B,UAAU,CAAC8D,GAAG,CAAC,CAAC;IAE9B,OAAO,CAAEpE,CAAC,CAAEwB,SAAS,EAAES,KAAK,EAAEC,QAAS,CAAC,CAAE;EAC3C;EAEA,OAAOd,IAAI,CAAEH,UAAU,CAACoD,WAAY,CAAC;AACtC"}