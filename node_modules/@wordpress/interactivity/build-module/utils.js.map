{"version":3,"names":["useMemo","_useMemo","useCallback","_useCallback","useEffect","_useEffect","useLayoutEffect","_useLayoutEffect","effect","getScope","setScope","resetScope","getNamespace","setNamespace","resetNamespace","afterNextFrame","callback","Promise","resolve","done","clearTimeout","timeout","window","cancelAnimationFrame","raf","setTimeout","requestAnimationFrame","createFlusher","compute","notify","flush","dispose","c","bind","x","useSignalEffect","eff","isExecuting","withScope","func","scope","ns","constructor","name","args","gen","value","it","next","e","throw","useWatch","useInit","inputs","factory","createRootFragment","parent","replaceNode","concat","s","length","nextSibling","insert","r","insertBefore","__k","nodeType","parentNode","firstChild","childNodes","appendChild","removeChild"],"sources":["@wordpress/interactivity/src/utils.js"],"sourcesContent":["/**\n * External dependencies\n */\nimport {\n\tuseMemo as _useMemo,\n\tuseCallback as _useCallback,\n\tuseEffect as _useEffect,\n\tuseLayoutEffect as _useLayoutEffect,\n} from 'preact/hooks';\nimport { effect } from '@preact/signals';\n\n/**\n * Internal dependencies\n */\nimport {\n\tgetScope,\n\tsetScope,\n\tresetScope,\n\tgetNamespace,\n\tsetNamespace,\n\tresetNamespace,\n} from './hooks';\n\nconst afterNextFrame = ( callback ) => {\n\treturn new Promise( ( resolve ) => {\n\t\tconst done = () => {\n\t\t\tclearTimeout( timeout );\n\t\t\twindow.cancelAnimationFrame( raf );\n\t\t\tsetTimeout( () => {\n\t\t\t\tcallback();\n\t\t\t\tresolve();\n\t\t\t} );\n\t\t};\n\t\tconst timeout = setTimeout( done, 100 );\n\t\tconst raf = window.requestAnimationFrame( done );\n\t} );\n};\n\n// Using the mangled properties:\n// this.c: this._callback\n// this.x: this._compute\n// https://github.com/preactjs/signals/blob/main/mangle.json\nfunction createFlusher( compute, notify ) {\n\tlet flush;\n\tconst dispose = effect( function () {\n\t\tflush = this.c.bind( this );\n\t\tthis.x = compute;\n\t\tthis.c = notify;\n\t\treturn compute();\n\t} );\n\treturn { flush, dispose };\n}\n\n// Version of `useSignalEffect` with a `useEffect`-like execution. This hook\n// implementation comes from this PR, but we added short-cirtuiting to avoid\n// infinite loops: https://github.com/preactjs/signals/pull/290\nexport function useSignalEffect( callback ) {\n\t_useEffect( () => {\n\t\tlet eff = null;\n\t\tlet isExecuting = false;\n\t\tconst notify = async () => {\n\t\t\tif ( eff && ! isExecuting ) {\n\t\t\t\tisExecuting = true;\n\t\t\t\tawait afterNextFrame( eff.flush );\n\t\t\t\tisExecuting = false;\n\t\t\t}\n\t\t};\n\t\teff = createFlusher( callback, notify );\n\t\treturn eff.dispose;\n\t}, [] );\n}\n\n/**\n * Returns the passed function wrapped with the current scope so it is\n * accessible whenever the function runs. This is primarily to make the scope\n * available inside hook callbacks.\n *\n * @param {Function} func The passed function.\n * @return {Function} The wrapped function.\n */\nexport const withScope = ( func ) => {\n\tconst scope = getScope();\n\tconst ns = getNamespace();\n\tif ( func?.constructor?.name === 'GeneratorFunction' ) {\n\t\treturn async ( ...args ) => {\n\t\t\tconst gen = func( ...args );\n\t\t\tlet value;\n\t\t\tlet it;\n\t\t\twhile ( true ) {\n\t\t\t\tsetNamespace( ns );\n\t\t\t\tsetScope( scope );\n\t\t\t\ttry {\n\t\t\t\t\tit = gen.next( value );\n\t\t\t\t} finally {\n\t\t\t\t\tresetNamespace();\n\t\t\t\t\tresetScope();\n\t\t\t\t}\n\t\t\t\ttry {\n\t\t\t\t\tvalue = await it.value;\n\t\t\t\t} catch ( e ) {\n\t\t\t\t\tgen.throw( e );\n\t\t\t\t}\n\t\t\t\tif ( it.done ) break;\n\t\t\t}\n\t\t\treturn value;\n\t\t};\n\t}\n\treturn ( ...args ) => {\n\t\tsetNamespace( ns );\n\t\tsetScope( scope );\n\t\ttry {\n\t\t\treturn func( ...args );\n\t\t} finally {\n\t\t\tresetNamespace();\n\t\t\tresetScope();\n\t\t}\n\t};\n};\n\n/**\n * Accepts a function that contains imperative code which runs whenever any of\n * the accessed _reactive_ properties (e.g., values from the global state or the\n * context) is modified.\n *\n * This hook makes the element's scope available so functions like\n * `getElement()` and `getContext()` can be used inside the passed callback.\n *\n * @param {Function} callback The hook callback.\n */\nexport function useWatch( callback ) {\n\tuseSignalEffect( withScope( callback ) );\n}\n\n/**\n * Accepts a function that contains imperative code which runs only after the\n * element's first render, mainly useful for intialization logic.\n *\n * This hook makes the element's scope available so functions like\n * `getElement()` and `getContext()` can be used inside the passed callback.\n *\n * @param {Function} callback The hook callback.\n */\nexport function useInit( callback ) {\n\t_useEffect( withScope( callback ), [] );\n}\n\n/**\n * Accepts a function that contains imperative, possibly effectful code. The\n * effects run after browser paint, without blocking it.\n *\n * This hook is equivalent to Preact's `useEffect` and makes the element's scope\n * available so functions like `getElement()` and `getContext()` can be used\n * inside the passed callback.\n *\n * @param {Function} callback Imperative function that can return a cleanup\n *                            function.\n * @param {any[]}    inputs   If present, effect will only activate if the\n *                            values in the list change (using `===`).\n */\nexport function useEffect( callback, inputs ) {\n\t_useEffect( withScope( callback ), inputs );\n}\n\n/**\n * Accepts a function that contains imperative, possibly effectful code. Use\n * this to read layout from the DOM and synchronously re-render.\n *\n * This hook is equivalent to Preact's `useLayoutEffect` and makes the element's\n * scope available so functions like `getElement()` and `getContext()` can be\n * used inside the passed callback.\n *\n * @param {Function} callback Imperative function that can return a cleanup\n *                            function.\n * @param {any[]}    inputs   If present, effect will only activate if the\n *                            values in the list change (using `===`).\n */\nexport function useLayoutEffect( callback, inputs ) {\n\t_useLayoutEffect( withScope( callback ), inputs );\n}\n\n/**\n * Returns a memoized version of the callback that only changes if one of the\n * inputs has changed (using `===`).\n *\n * This hook is equivalent to Preact's `useCallback` and makes the element's\n * scope available so functions like `getElement()` and `getContext()` can be\n * used inside the passed callback.\n *\n * @param {Function} callback Imperative function that can return a cleanup\n *                            function.\n * @param {any[]}    inputs   If present, effect will only activate if the\n *                            values in the list change (using `===`).\n */\nexport function useCallback( callback, inputs ) {\n\t_useCallback( withScope( callback ), inputs );\n}\n\n/**\n * Pass a factory function and an array of inputs. `useMemo` will only recompute\n * the memoized value when one of the inputs has changed.\n *\n * This hook is equivalent to Preact's `useMemo` and makes the element's scope\n * available so functions like `getElement()` and `getContext()` can be used\n * inside the passed factory function.\n *\n * @param {Function} factory Imperative function that can return a cleanup\n *                           function.\n * @param {any[]}    inputs  If present, effect will only activate if the\n *                           values in the list change (using `===`).\n */\nexport function useMemo( factory, inputs ) {\n\t_useMemo( withScope( factory ), inputs );\n}\n\n// For wrapperless hydration.\n// See https://gist.github.com/developit/f4c67a2ede71dc2fab7f357f39cff28c\nexport const createRootFragment = ( parent, replaceNode ) => {\n\treplaceNode = [].concat( replaceNode );\n\tconst s = replaceNode[ replaceNode.length - 1 ].nextSibling;\n\tfunction insert( c, r ) {\n\t\tparent.insertBefore( c, r || s );\n\t}\n\treturn ( parent.__k = {\n\t\tnodeType: 1,\n\t\tparentNode: parent,\n\t\tfirstChild: replaceNode[ 0 ],\n\t\tchildNodes: replaceNode,\n\t\tinsertBefore: insert,\n\t\tappendChild: insert,\n\t\tremoveChild( c ) {\n\t\t\tparent.removeChild( c );\n\t\t},\n\t} );\n};\n"],"mappings":"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"}